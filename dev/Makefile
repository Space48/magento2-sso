################################################################################
# This is a self-documenting Makefile. When adding a new target, add a
# description as a comment that starts with "##" at the end of the target
# definition. The description is be included in the autogenerated documentation
# when running `make help` or just `make`. Targets without a description are
# considered internal and will be excluded from documentation.
################################################################################

.DEFAULT_GOAL := help
.PHONY := help

include .env

WARDEN_SHELL=warden env exec php-fpm bash

help:
	@grep -hE '^[a-zA-Z/._-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

setup: check-prerequisites init-environment start create-project install-dependencies info ## Configure a local development environment

start: ## Start a previously configured local development environment
	warden env up -d

shell: ## Open a CLI shell within the project
	$(WARDEN_SHELL)

info: ## Display development environment information
	@echo "############################################################";\
	 echo "#                  DEVELOPMENT ENVIRONMENT                 #";\
	 echo "                                                            ";\
	 echo "  The development environment is available using the        ";\
	 echo "  following details.                                        ";\
	 echo "                                                            ";\
	 echo "  Frontend URL:     https://$(TRAEFIK_SUBDOMAIN).$(TRAEFIK_DOMAIN)/        ";\
	 echo "  Backend URL:      https://$(TRAEFIK_SUBDOMAIN).$(TRAEFIK_DOMAIN)/backend ";\
	 echo "  Backend username: $(ADMIN_USERNAME)                       ";\
	 echo "  Backend password: $(ADMIN_PASSWORD)                       ";\
	 echo "                                                            ";\
	 echo "############################################################";

stop: ## Stop the local development environment
	warden env stop

destroy: ## Destroy the local development environment, removing the environment data
	warden env down -v
	rm -rf magento

check-prerequisites:
	@if [ -z "$$(which warden)" ];\
	then \
		echo "############################################################";\
		echo "#                   DEPENDENCIES MISSING                   #";\
		echo "#                                                          #";\
		echo "# The development environment for this project requires    #";\
		echo "# Warden. Please visit https://warden.dev/ and follow the  #";\
		echo "# installation instructions there.                         #";\
		echo "############################################################";\
	fi

init-environment:
	warden svc up
	warden sign-certificate $(TRAEFIK_DOMAIN)
	warden env pull

create-project:
	$(WARDEN_SHELL) -c "\
		composer create-project \
			--no-install \
			--repository-url=https://repo.magento.com/ \
			magento/project-community-edition:2.4.x \
			/tmp/magento \
		&& cd /tmp/magento \
		&& composer config repositories.extension path /var/www/html/extension \
		&& composer require --no-update $(PACKAGE_NAME):dev-master \
		&& composer update \
		&& rsync -a /tmp/magento/ /var/www/html \
		&& rm -rf /tmp/magento \
	"

install-dependencies:
	$(WARDEN_SHELL) -c "\
		export COMPOSER_AUTH='$$(cat ~/.composer/auth.json)' \
		&& php -d memory_limit=-1 bin/magento sampledata:deploy \
		&& php -d memory_limit=-1 bin/magento setup:install \
			--backend-frontname=backend \
			--amqp-host=rabbitmq \
			--amqp-port=5672 \
			--amqp-user=guest \
			--amqp-password=guest \
			--db-host=db \
			--db-name=magento \
			--db-user=magento \
			--db-password=magento \
			--search-engine=elasticsearch7 \
			--elasticsearch-host=elasticsearch \
			--elasticsearch-port=9200 \
			--elasticsearch-index-prefix=magento2 \
			--elasticsearch-enable-auth=0 \
			--elasticsearch-timeout=15 \
			--http-cache-hosts=varnish:80 \
			--session-save=redis \
			--session-save-redis-host=redis \
			--session-save-redis-port=6379 \
			--session-save-redis-db=2 \
			--session-save-redis-max-concurrency=20 \
			--cache-backend=redis \
			--cache-backend-redis-server=redis \
			--cache-backend-redis-db=0 \
			--cache-backend-redis-port=6379 \
			--page-cache=redis \
			--page-cache-redis-server=redis \
			--page-cache-redis-db=1 \
			--page-cache-redis-port=6379 \
		&& php bin/magento config:set --lock-env web/unsecure/base_url 'https://$(TRAEFIK_SUBDOMAIN).$(TRAEFIK_DOMAIN)/' \
		&& php bin/magento config:set --lock-env web/secure/base_url 'https://$(TRAEFIK_SUBDOMAIN).$(TRAEFIK_DOMAIN)/' \
		&& php bin/magento config:set --lock-env web/secure/use_in_frontend 1 \
        && php bin/magento config:set --lock-env web/secure/use_in_adminhtml 1 \
        && php bin/magento config:set --lock-env web/seo/use_rewrites 1 \
        && php bin/magento config:set --lock-env system/full_page_cache/caching_application 2 \
        && php bin/magento config:set --lock-env system/full_page_cache/ttl 604800 \
        && php bin/magento config:set --lock-env catalog/search/enable_eav_indexer 1 \
        && php bin/magento config:set --lock-env dev/static/sign 0 \
        && php bin/magento deploy:mode:set -s developer \
		&& php bin/magento module:disable Magento_TwoFactorAuth \
        && php bin/magento admin:user:create \
        	--admin-user=$(ADMIN_USERNAME) \
        	--admin-password=$(ADMIN_PASSWORD) \
        	--admin-email=admin@example.com \
        	--admin-firstname=Dev \
        	--admin-lastname=Admin \
	"
